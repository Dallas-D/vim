"Use spaces, tab size of 4, text width of 100
set shiftwidth=4 softtabstop=4 expandtab tw=100
syntax enable
set nu rnu cul "line numbers, relative nums, cursor line highlight
set laststatus=2 "status line always on
filetype indent on
set incsearch hlsearch "search highlighting settings
set sb spr "split below & split right for new windows

"Directories for swp, backup, and undo files
"TODO: use mkdir() to create dirs if they don't exist
set directory^=~\vimfiles\swp
set backupdir^=~\vimfiles\backup
set undodir^=~\vimfiles\undo
set undofile

"GUI
set bg=dark
colo onehalfdark
set guifont=Cascadia_Code_Light:h11:W300:cANSI:qDRAFT
set guioptions-=T
"set lsp=2 "linespacing
"Should set menu & scrollbar to theme colors but doesn't
"Might be used wrong
"hi link Menu Normal
"hi link Scrollbar Normal
"hi Menu guibg=#282c34 guifg=#dcdfe4
"hi Scrollbar guibg=#282c34 guifg=#dcdfe4

"Save the file with Ctrl+s (requires the file to be named)
nnoremap <silent> <C-s> <Esc>:update<CR>
inoremap <silent> <C-s> <Esc>:update<CR>gi

"Focus Mode
"Activate using <F9>
"Inspired by these:
"   https://zserge.com/posts/vim-distraction-free/
"   https://coderwall.com/p/4jrcfa/easy-focus-mode-in-vim
"   https://www.laktek.com/2012/09/05/distraction-free-writing-with-vim/

let g:fm_width = 100 + &numberwidth "center window will be 100 columns
let s:fm_enabled = 0

function! ToggleFocusMode()
  if (s:fm_enabled == 0)
    let s:fm_enabled = 1
    leftabove vnew | wincmd l "left margin
    rightbelow vnew | wincmd h "right margin
    set winfixwidth "make center window stay the same width
    execute 'vert res ' . g:fm_width 
    wincmd = "make center window 100 columns then redistribute space
    "make vertsplit lines less obvious
    hi VertSplit ctermbg=236 guibg=#282C34 ctermfg=239 guifg=#373C45
    set laststatus=0 "hide status line
    set guioptions-=r "right scroll bar
    set guioptions-=L "left scroll bar
    set guioptions-=m "menu bar
    "make writing text more natural
    "remove relative line numbers & ruler
    set wrap linebreak noruler nornu 
    "make up/down movements make more sense for wrapped text
    map j gj
    map k gk
  else
    let s:fm_enabled = 0
    only
    set nowinfixwidth
    execute 'colorscheme ' . g:colors_name
    set laststatus=2
    set guioptions+=r
    set guioptions+=L
    set guioptions+=m
    set nowrap nolinebreak ruler rnu 
    unmap j
    unmap k
  endif
endfunction 
nnoremap <silent> <F9> :call ToggleFocusMode()<CR>
